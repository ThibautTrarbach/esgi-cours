version: "3.8"

services:
  wordpress:
    depends_on:
      - wordpress_db
    image: wordpress:latest
    networks:
      - proxy
      - backend
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.wordpress.rule=Host(`wordpress.ent-alpha.fr`)"
        - "traefik.http.routers.wordpress.entrypoints=websecure"
        - "traefik.http.services.wordpress.loadbalancer.server.port=80"
        - "traefik.http.routers.wordpress.tls=true"
        - "traefik.docker.network=stackv5_proxy"
        - "traefik.http.services.wordpress.loadBalancer.sticky.cookie=true"
        - "traefik.http.services.wordpress.loadBalancer.sticky.cookie.name=wwordpress_cookie_name"
      replicas: 5
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == worker
    environment:
      WORDPRESS_DB_HOST: wordpress_db
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: admin
      WORDPRESS_DB_PASSWORD_FILE: /run/secrets/db_wordpress_pwd
    volumes:
      - /mnt/data/wordpress/file:/var/www/html
    secrets:
      - db_wordpress_pwd
  wordpress_db:
    image: mariadb:jammy
    environment:
      MARIADB_DATABASE: wordpress
      MARIADB_USER: admin
      MARIADB_PASSWORD_FILE: /run/secrets/db_wordpress_pwd
      MARIADB_ROOT_PASSWORD: /run/secrets/db_root_pwd
    volumes:
      - /mnt/data/wordpress/db:/var/lib/mysql
    networks:
      - backend
    secrets:
      - db_wordpress_pwd
      - db_root_pwd
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
  traefik:
    image: "traefik:v2.10"
    volumes:
      - "/mnt/data/proxy/traefik.yml:/etc/traefik/traefik.yml"
    ports:
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    networks:
      - socket-proxy
      - proxy
      - bridge
    depends_on:
      - socket-proxy
    deploy:
      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
  socket-proxy:
    image: tecnativa/docker-socket-proxy:edge
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
    environment:
      NETWORKS: 1
      SERVICES: 1
      TASKS: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - socket-proxy
  whoami:
    image: "traefik/whoami"
    networks:
      - proxy
    depends_on:
      - socket-proxy
      - traefik
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.rule=Host(`whoami.ent-alpha.fr`)"
        - "traefik.http.routers.whoami.entrypoints=websecure"
        - "traefik.http.services.whoami.loadbalancer.server.port=80"
        - "traefik.http.routers.whoami.tls=true"
      replicas: 10
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: any    
  portainer_agent:
    image: portainer/agent:2.19.4
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
  portainer:
    image: portainer/portainer-ce:2.19.4
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - target: 9443
        published: 9443
        protocol: tcp
        mode: ingress
      - target: 9000
        published: 9000
        protocol: tcp
        mode: ingress
      - target: 8000
        published: 8000
        protocol: tcp
        mode: ingress
    volumes:
      - /mnt/data/portainer:/data
    networks:
      - agent_network
      - proxy
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.rule=Host(`portainer.ent-alpha.fr`)"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.services.portainer.loadbalancer.server.port=9443"
        - "traefik.http.routers.portainer.tls=true"
        - "traefik.docker.network=stackv5_proxy"
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

networks:
  bridge:
    driver: overlay
    attachable: true
  proxy:
    driver: overlay
    attachable: true
  socket-proxy:
    driver: overlay
    attachable: true
  backend:
    driver: overlay
    attachable: true
  zabbix:
    driver: overlay
    attachable: true
  agent_network:
    driver: overlay
    attachable: true
  
secrets:
  db_wordpress_pwd:
    file: db_wordpress_pwd
  db_root_pwd:
    file: db_root_pwd
